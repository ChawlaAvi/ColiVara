name: Test Cloud

on:
  pull_request:
    branches: [cloud]

  # on demand
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: pgvector/pgvector:pg16
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      gotenberg:
        image: gotenberg/gotenberg:8
        ports:
          - 3000:3000
        options: >-
          --health-cmd "curl -f http://localhost:3000/health"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
      redis:
        image: "redis:alpine"
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      stripe:
        image: stripe/stripe-cli
        env:
          STRIPE_API_KEY: ${{ secrets.STRIPE_API_KEY }}
          STRIPE_DEVICE_NAME: ${{ secrets.STRIPE_DEVICE_NAME }}
    
    steps:
      - uses: actions/checkout@v4
    
      - name: Create env file
        run: |
          echo "${{ secrets.ENV_TEST_FILE }}" | base64 -d > ./web/.env.test

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
        
      - name: Install system dependencies
        run: |
            sudo apt-get update
            sudo apt-get install -y libmagic1 poppler-utils xauth

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
            node-version: '22'
    
      - name: Install Python dependencies
        working-directory: ./web
        run: |
            python -m pip install --upgrade pip
            pip install -r requirements.in
    
      - name: Install Node dependencies
        working-directory: ./web
        run: npm install
        
      - name: Install Playwright
        working-directory: ./web
        run: |
          playwright install
          playwright install-deps
    
      - name: Run migrations
        working-directory: ./web
        run: |
          set -a
          source .env.test
          set +a
          DATABASE_URL=postgres://test_user:test_password@localhost:5432/test_db python manage.py migrate

  
      - name: Run UI tests
        working-directory: ./web
        run: |
          set -a
          source .env.test
          set +a
          DATABASE_URL=postgres://test_user:test_password@localhost:5432/test_db \
          GOTENBERG_URL=http://localhost:3000 \
          pytest -c pytest-ui.ini
